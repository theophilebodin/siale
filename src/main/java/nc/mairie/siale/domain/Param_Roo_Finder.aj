// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nc.mairie.siale.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import nc.mairie.siale.domain.Param;
import nc.mairie.siale.domain.TypeParam;

privileged aspect Param_Roo_Finder {
    
    public static TypedQuery<Param> Param.findParamsByNomLike(String nom) {
        if (nom == null || nom.length() == 0) throw new IllegalArgumentException("The nom argument is required");
        nom = nom.replace('*', '%');
        if (nom.charAt(0) != '%') {
            nom = "%" + nom;
        }
        if (nom.charAt(nom.length() - 1) != '%') {
            nom = nom + "%";
        }
        EntityManager em = Param.entityManager();
        TypedQuery<Param> q = em.createQuery("SELECT o FROM Param AS o WHERE LOWER(o.nom) LIKE LOWER(:nom)", Param.class);
        q.setParameter("nom", nom);
        return q;
    }
    
    public static TypedQuery<Param> Param.findParamsByTypeParam(TypeParam typeParam) {
        if (typeParam == null) throw new IllegalArgumentException("The typeParam argument is required");
        EntityManager em = Param.entityManager();
        TypedQuery<Param> q = em.createQuery("SELECT o FROM Param AS o WHERE o.typeParam = :typeParam", Param.class);
        q.setParameter("typeParam", typeParam);
        return q;
    }
    
}
