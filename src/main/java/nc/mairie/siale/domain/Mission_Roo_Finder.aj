// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nc.mairie.siale.domain;

import java.util.Date;
import java.util.Set;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import nc.mairie.siale.domain.ControleurSIALE;
import nc.mairie.siale.domain.Mission;

privileged aspect Mission_Roo_Finder {
    
    public static TypedQuery<Mission> Mission.findMissionsByClotureeNotOrDatePrevueGreaterThan(Boolean cloturee, Date datePrevue) {
        if (cloturee == null) throw new IllegalArgumentException("The cloturee argument is required");
        if (datePrevue == null) throw new IllegalArgumentException("The datePrevue argument is required");
        EntityManager em = Mission.entityManager();
        TypedQuery<Mission> q = em.createQuery("SELECT o FROM Mission AS o WHERE o.cloturee IS NOT :cloturee  OR o.datePrevue > :datePrevue", Mission.class);
        q.setParameter("cloturee", cloturee);
        q.setParameter("datePrevue", datePrevue);
        return q;
    }
    
    public static TypedQuery<Mission> Mission.findMissionsByControleursSIALE(Set<ControleurSIALE> controleursSIALE) {
        if (controleursSIALE == null) throw new IllegalArgumentException("The controleursSIALE argument is required");
        EntityManager em = Mission.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Mission AS o WHERE");
        for (int i = 0; i < controleursSIALE.size(); i++) {
            if (i > 0) queryBuilder.append(" AND");
            queryBuilder.append(" :controleursSIALE_item").append(i).append(" MEMBER OF o.controleursSIALE");
        }
        TypedQuery<Mission> q = em.createQuery(queryBuilder.toString(), Mission.class);
        int controleursSIALEIndex = 0;
        for (ControleurSIALE _controleursiale: controleursSIALE) {
            q.setParameter("controleursSIALE_item" + controleursSIALEIndex++, _controleursiale);
        }
        return q;
    }
    
}
